/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "mouse.dtsi"

// Layers

#define DEFAULT 0
#define NUM_NAV 1
#define SYMB 2
#define ANDROID 3
#define BT 4
#define MUSIC 5
#define MOUSE 6

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <17 18 19 20>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <10 11 12 13>;
            hold-trigger-on-release;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hplt: hold_preferred-lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_LT";
            #binding-cells = <2>;
            tapping-term-ms = <195>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        hms: homerow_mod_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        q_esc: q_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_ESC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mouse_hold_tap: mouse_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE_HOLD_TAP";
            bindings = <&none>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <12 13>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <13 14>;
        };

        BT {
            bindings = <&tog BT>;
            key-positions = <1 2>;
        };

        LOCK {
            bindings = <&kp LC(LG(Q))>;
            key-positions = <8 9>;
        };

        CAPS_LOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&q_esc ESC Q  &kp W        &kp E       &kp R        &kp T            &kp Y            &kp U         &kp I       &kp O        &kp P
&hms LSHFT A  &hm LCTRL S  &hm LALT D  &hm LGUI F   &kp G            &kp H            &hm LGUI J    &hm LALT K  &hm RCTRL L  &hms RSHFT SEMI
&kp Z         &kp X        &kp C       &kp V        &kp B            &bt BT_PRV         &kp A  &kp N       &kp M        &kp COMMA        &kp DOT  &kp FSLH
&tog MOUSE        &kp TAB      &lt MUSIC SPACE   &lt ANDROID ENTER  &lt NUM_NAV LG(LA(G))  &lt SYMB BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp DOWN UP>;
        };

        NUM_NAV {
            bindings = <
&kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &kp SINGLE_QUOTE  &kp LEFT_BRACKET      &kp UNDERSCORE  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES
&kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp UP          &kp RPAR           &kp RIGHT_BRACE
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT    &none             &bt BT_CLR            &kp LA(LEFT)    &kp LEFT           &kp DOWN           &kp RIGHT  &kp LA(RIGHT_ARROW)
&none            &kp KP_COMMA     &kp KP_EQUAL     &none            &none      &kp DEL
            >;
        };

        SYMB {
            bindings = <
&none          &kp N7   &kp N8   &kp N9  &none  &none  &kp AT      &kp HASH    &kp TILDE  &kp TILDE
&none          &kp N4   &kp N5   &kp N6  &none  &none  &kp PLUS    &kp MINUS   &kp STAR   &kp PRCNT
&kp BACKSLASH  &kp N1   &kp N2   &kp N3  &none  &none  &bt BT_PRV  &bt BT_NXT  &kp L      &kp COMMA  &kp DOT  &kp GRAVE
                &none          &trans  &trans  &none   &none  &none
            >;
        };

        ANDROID {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(KP_NUMBER_0)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        BT {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &none         &none         &none                                 &none         &none     &none           &none           &none
&none           &none         &none         &none         &none                                 &none         &none     &none           &none           &none
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_PRV         &bt BT_NXT     &none           &none           &none           &none           &none
&none          &none         &trans         &none     &none     &none
            >;
        };

        MUSIC {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE {
            bindings = <
&none   &none  &none  &none      &kp LG(LS(NUMBER_4))      &none         &none           &none           &none            &none
&hms LSHFT A  &hm LCTRL S  &hm LALT D  &hm LGUI F      &none      &msc SCRL_DOWN  &mkp MB4  &mmv MOVE_UP    &mkp MB5  &kp BACKSPACE
&kp Z   &none  &none  &none      &none     &bt BT_PRV         &bt BT_NXT           &msc SCRL_UP  &mmv MOVE_LEFT         &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp ESC
&tog MOUSE  &kp TAB  &trans  &mkp LCLK  &mouse_hold_tap 0 RCLK  &tog MOUSE
            >;
        };

    };
};
